{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","accum","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","e","updatedFish","updateFish","index","onChange","deleteFish","Login","storeId","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","displayName","authHandler","authData","a","fetch","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","guestLogin","goToStorePicker","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","console","log","window","location","reload","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.a01f9ffa.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\nimport { getFunName } from \"../helpers\";\n\nclass StorePicker extends React.Component {\n  myInput = React.createRef();\n\n  goToStore = event => {\n    // 1. Stop the form from submitting\n    event.preventDefault();\n    // 2. get the text from that input\n    const storeName = this.myInput.current.value;\n    // 3. Change the page to /store/whatever-they-entered\n    this.props.history.push(`/store/${storeName}`);\n  };\n  render() {\n    return (\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>Please Enter A Store</h2>\n        <input\n          type=\"text\"\n          ref={this.myInput}\n          required\n          placeholder=\"Store Name\"\n          defaultValue={getFunName()}\n        />\n        <button type=\"submit\">Visit Store →</button>\n      </form>\n    );\n  }\n}\n\nexport default StorePicker;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n//Stateless functional component\r\nconst Header = props => (\r\n  <header className=\"top\">\r\n    <h1>\r\n      Catch\r\n      <span className=\"ofThe\">\r\n        <span className=\"of\">OF</span>\r\n        <span className=\"the\">THE</span>\r\n      </span>\r\n      Day\r\n    </h1>\r\n    <h3 className=\"tagline\">\r\n      <span>{props.tagline}</span>\r\n    </h3>\r\n  </header>\r\n);\r\n\r\n// class Header extends React.Component {\r\n//   render() {\r\n//     return (\r\n//       <header className=\"top\">\r\n//         <h1>\r\n//           Catch\r\n//           <span className=\"ofThe\">\r\n//             <span className=\"of\">OF</span>\r\n//             <span className=\"the\">THE</span>\r\n//           </span>\r\n//           Day\r\n//         </h1>\r\n//         <h3 className=\"tagline\">\r\n//           <span>{this.props.tagline}</span>\r\n//         </h3>\r\n//       </header>\r\n//     );\r\n//   }\r\n// }\r\n\r\nHeader.propTypes = {\r\n  tagline: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func\n  };\n  renderOrder = key => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === \"available\";\n    const transitionOptions = {\n      classNames: \"order\",\n      key,\n      timeout: { enter: 250, exit: 250 }\n    };\n\n    //Make sure the fish is loaded from firebase before we continue\n    if (!fish) return null;\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>Sorry {fish.name} is no longer available</li>\n        </CSSTransition>\n      );\n    }\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition\n                classNames=\"count\"\n                key={count}\n                timeout={{ enter: 250, exit: 250 }}\n              >\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs {fish.name}\n            {formatPrice(count * fish.price)}\n          </span>\n          <button\n            onClick={() => {\n              this.props.removeFromOrder(key);\n            }}\n          >\n            &times;\n          </button>\n        </li>\n      </CSSTransition>\n    );\n  };\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((accum, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === \"available\";\n      if (isAvailable) {\n        return accum + count * fish.price;\n      } else {\n        return accum;\n      }\n    }, 0);\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          Total:\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass AddFishForm extends React.Component {\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  static propTypes = {\n    addFish: PropTypes.func\n  };\n\n  createFish = event => {\n    // 1.  stop the form from submitting\n    event.preventDefault();\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value\n    };\n    this.props.addFish(fish);\n    // refresh the form\n    event.currentTarget.reset();\n  };\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n        <input\n          name=\"price\"\n          ref={this.priceRef}\n          type=\"number\"\n          placeholder=\"Price\"\n        />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n        <input\n          name=\"image\"\n          ref={this.imageRef}\n          type=\"text\"\n          placeholder=\"Image\"\n        />\n        <button type=\"submit\">+ Add Fish</button>\n      </form>\n    );\n  }\n}\n\nexport default AddFishForm;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass EditFishForm extends React.Component {\r\n  static propTypes = {\r\n    fish: PropTypes.shape({\r\n      image: PropTypes.string,\r\n      name: PropTypes.string,\r\n      desc: PropTypes.string,\r\n      status: PropTypes.string,\r\n      price: PropTypes.number\r\n    }),\r\n    index: PropTypes.string,\r\n    updateFish: PropTypes.func,\r\n    deleteFish: PropTypes.func\r\n  };\r\n  handleChange = e => {\r\n    //Update that fish\r\n    //Take a copy of the current fish\r\n    const updatedFish = {\r\n      ...this.props.fish,\r\n      [e.currentTarget.name]: e.currentTarget.value //computed property names\r\n    };\r\n    this.props.updateFish(this.props.index, updatedFish);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"fish-edit\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.name}\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          name=\"price\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.price}\r\n        />\r\n        <select\r\n          type=\"text\"\r\n          name=\"status\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.status}\r\n        >\r\n          <option value=\"available\">Fresh!</option>\r\n          <option value=\"unavailable\">Sold Out!</option>\r\n        </select>\r\n        <textarea\r\n          name=\"desc\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.desc}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"image\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.image}\r\n        />\r\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\r\n          REMOVE FISH\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditFishForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst Login = props => (\r\n  <nav className=\"login\">\r\n    <h2>Inventory Login</h2>\r\n    <p>\r\n      Sign in to manage <strong>{props.storeId}</strong> store's Inventory.\r\n    </p>\r\n    <button\r\n      className=\"github\"\r\n      onClick={() => {\r\n        props.authenticate(\"Github\");\r\n      }}\r\n    >\r\n      Log In with GitHub\r\n    </button>\r\n    <button\r\n      className=\"facebook\"\r\n      onClick={() => {\r\n        props.authenticate(\"Facebook\");\r\n      }}\r\n    >\r\n      Log In with Facebook\r\n    </button>\r\n    <p>Hack: You'll become the owner of this store if there's no Owner!!</p>\r\n  </nav>\r\n);\r\n\r\nLogin.propTypes = {\r\n  authenticate: PropTypes.func.isRequired,\r\n  storeId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Login;\r\n","import Rebase from \"re-base\";\r\nimport firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyCdY5lf5cMypYsRTcU5JCb-AHccTmCw_U0\",\r\n  authDomain: \"catch-of-the-day-2-330dc.firebaseapp.com\",\r\n  databaseURL: \"https://catch-of-the-day-2-330dc.firebaseio.com\"\r\n});\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\n//Named export\r\nexport { firebaseApp };\r\n\r\n//Default export\r\nexport default base;\r\n","//  Inventory without Login Implemented\n/*\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    addFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func\n  };\n\n  render() {\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory</h2>\n        {Object.keys(this.props.fishes).map(key => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n*/\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./Login\";\nimport firebase from \"firebase\";\nimport base, { firebaseApp } from \"../base\";\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    addFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func,\n    storeId: PropTypes.string\n  };\n\n  state = {\n    uid: null,\n    owner: null,\n    displayName: null\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async authData => {\n    //1. Look up the current store in the firebase database\n    const store = await base.fetch(this.props.storeId, { context: this });\n    //2. Claim it if there is no owner\n    if (!store.owner) {\n      //save it as your own\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid\n      });\n      await base.post(`${this.props.storeId}/name`, {\n        data: authData.user.displayName\n      });\n    }\n    //3. Set the state of the inventory component to reflect the current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid,\n      displayName: store.name || authData.user.displayName\n    });\n  };\n\n  authenticate = provider => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.authHandler);\n  };\n\n  logout = async () => {\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  };\n\n  render() {\n    const logout = <button onClick={this.logout}>Log Out!</button>;\n    //1. Check if they are logged in\n    if (!this.state.uid)\n      return (\n        <div>\n          <Login\n            storeId={this.props.storeId}\n            authenticate={this.authenticate}\n          />\n          <button onClick={() => this.props.guestLogin()}>\n            LOGIN AS GUEST\n          </button>\n          &nbsp;\n          <button\n            onClick={() => {\n              this.props.goToStorePicker();\n            }}\n          >\n            GO TO STORE PICKER\n          </button>\n        </div>\n      );\n    //2. Check if current logged in user is not the owner of the store\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry there is already an owner to this store :(</p>\n          {logout}\n        </div>\n      );\n    }\n    //3. They must be the owner so render the inventory\n    return (\n      <div className=\"Inventory\">\n        <h2>Inventory</h2>\n        <p>\n          Welcome <strong>{this.state.displayName}!</strong>\n        </p>\n        {logout}\n        {Object.keys(this.props.fishes).map(key => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\n\nclass Fish extends React.Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    addToOrder: PropTypes.func,\n    index: PropTypes.string\n  };\n  render() {\n    const { image, name, price, desc, status } = this.props.details;\n    const isAvailable = status === \"available\";\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name} />\n        <h3 className=\"fish-name\">\n          {name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button\n          disabled={!isAvailable}\n          onClick={() => this.props.addToOrder(this.props.index)}\n        >\n          {isAvailable ? \"Add To Order\" : \"Sold Out!\"}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Fish;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from \"../base\";\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {}\n  };\n  static propTypes = {\n    match: PropTypes.object\n  };\n  componentDidMount() {\n    const { params } = this.props.match;\n    // first reinstate our localStorage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: \"fishes\"\n    });\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(\n      this.props.match.params.storeId,\n      JSON.stringify(this.state.order)\n    );\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addFish = fish => {\n    // 1. Take a copy of the existing state\n    const fishes = { ...this.state.fishes };\n    // 2. Add our new fish to that fishes variable\n    fishes[`fish${Date.now()}`] = fish;\n    // 3. Set the new fishes object to state\n    this.setState({ fishes });\n  };\n  updateFish = (key, updatedFish) => {\n    //1. Take a copy of the current state\n    const fishes = { ...this.state.fishes };\n    //2. Update that state\n    fishes[key] = updatedFish;\n    //3. Set that state\n    this.setState({ fishes });\n  };\n  deleteFish = key => {\n    //1. Take a copy of the current state\n    const fishes = { ...this.state.fishes };\n    //2. Update that state\n    fishes[key] = null;\n    //3. Set that state\n    this.setState({ fishes });\n  };\n\n  loadSampleFishes = () => {\n    this.setState({ fishes: sampleFishes });\n  };\n\n  addToOrder = key => {\n    // 1. take a copy of state\n    const order = { ...this.state.order };\n    // 2. Either add to the order, or update the number in our order\n    order[key] = order[key] + 1 || 1;\n    // 3. Call setState to update our state object\n    this.setState({ order });\n  };\n  removeFromOrder = key => {\n    //1. Take a copy of state\n    const order = { ...this.state.order };\n    //2. remove that item from order\n    delete order[key];\n    //3. Call setState to update our state object\n    this.setState({ order });\n  };\n  guestLogin = () => {\n    console.log(\"hi\");\n    this.props.history.push(\"/store/guest\");\n    window.location.reload();\n  };\n  goToStorePicker = () => {\n    this.props.history.push(\"/\");\n  };\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map(key => (\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order\n          removeFromOrder={this.removeFromOrder}\n          fishes={this.state.fishes}\n          order={this.state.order}\n        />\n        <Inventory\n          addFish={this.addFish}\n          fishes={this.state.fishes}\n          deleteFish={this.deleteFish}\n          updateFish={this.updateFish}\n          loadSampleFishes={this.loadSampleFishes}\n          storeId={this.props.match.params.storeId}\n          guestLogin={this.guestLogin}\n          goToStorePicker={this.goToStorePicker}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\nconst NotFound = () => (\n  <div>\n    <h2>Not Found!?!!!!1111</h2>\n  </div>\n);\n\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport StorePicker from \"./StorePicker\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound\";\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route path=\"/store/:storeId\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport Router from \"./components/Router\";\r\nimport \"./css/style.css\";\r\nrender(<Router />, document.querySelector(\"#main\"));\r\n"],"sourceRoot":""}